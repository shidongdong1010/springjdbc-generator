package ${base_dao_package};

import java.util.List;

#foreach($package in $packages)
import ${package};
#end

/**
 * ${table.tableComment}Dao基础操作接口
 *
 * @author ${author}
 * @version $v: ${version}, $time:${datetime} Exp $
 */
public interface ${table.className}BaseDao {

	void save(${table.className} ${table.propertyName});
	
	void update(${table.className} ${table.propertyName});

	void modify(${table.className} ${table.propertyName});

	void delete(${table.columnKey.propertyType.javaType} ${table.columnKey.propertyName});

	void batchSave(List<${table.className}> list);

    void batchUpdate(List<${table.className}> list);

    void batchDelete(List<Long> ids);

	/**
	 * 根据主键查询
	 * @param ${table.columnKey.propertyName} ${table.columnKey.columnComment}
	 * @return ${table.className}
	 */
	${table.className} findById(${table.columnKey.propertyType.javaType} ${table.columnKey.propertyName});

	/**
	 * 根据对象查询
	 * @param ${table.propertyName}
	 * @return List
	 */
	List<${table.className}> find(${table.className} ${table.propertyName});

	/**
	 * 根据对象查询
	 * @param ${table.propertyName}
	 * @param orders 排序字段，可多字段排序。格式{{"字段名", "asc"}, {"字段名, "desc"}}
	 * @return List
	 */
	List<${table.className}> find(${table.className} ${table.propertyName}, String[][] orders);

	/**
	 * 根据对象查询
	 * @param ${table.propertyName}
     * @param offset 开始索引
     * @param rows 条数(从第offset+1条开始，取rows条)
	 * @return List
	 */
	List<${table.className}> find(${table.className} ${table.propertyName}, Long offset, Long rows);

	/**
	 * 根据对象查询
	 * @param ${table.propertyName}
	 * @param orders 排序字段，可多字段排序。格式{{"字段名", "asc"}, {"字段名, "desc"}}
     * @param offset 开始索引
     * @param rows 条数(从第offset+1条开始，取rows条)
	 * @return List
	 */
	List<${table.className}> find(${table.className} ${table.propertyName}, String[][] orders, Long offset, Long rows);

	/**
	 * 根据对象查询条数
	 * @param ${table.propertyName}
	 * @return Long
	 */
	Long count(${table.className} ${table.propertyName});
}
